pipeline {
  agent any 
    // any {
    // //   image 'abhishekf5/maven-abhishek-docker-agent:v1'
    // //   args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    // }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'git@github.com:Akshay5596/pokemon-3-tier-web-k8s.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd springboot && mvn clean install'
      }
    }
    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd springboot &&  mvn sonar:sonar -Dsonar.url=http://192.168.49.1:9000/ -Dsonar.login=squ_10bd0adf14786037e7fb4d9cb45c88add126026c -Dsonar.projectName=sprin-bckend -Dsonar.java.binaries=. -Dsonar.projectKey=sprin-bckend'
        }
      }
    }

    stage('Build Docker Image') {
      environment {
        DOCKER_IMAGE = "akshay4444/imagestore:${BUILD_NUMBER}"
   
      }
    
    steps {
      script {
          sh 'cd springboot && docker build -t ${DOCKER_IMAGE} .'
            }
      }
    }        
    stage('Scan image') {
      steps {
        script {
                sh 'trivy image ${DOCKER_IMAGE} > scan_results.txt'
                }
          }
        }

    stage('Push image') {
      steps {
        script {
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            REGISTRY_CREDENTIALS = credentials('docker_cred')
            docker.withRegistry('https://index.docker.io/v1/', 'docker_cred') {
            dockerImage.push()
                    }
                }
            }
        }


    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "pokemon-3-tier-web-k8s"
            GIT_USER_NAME = "Akshay5596"
        }
        steps {
             script {
                sh '''
                    git config user.email "akshay.patil@gmail.com"
                    git config user.name "Akshay"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" springboot/k8s/deployment.yaml
                    git add springboot/k8s/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push origin main
                '''
            }
        }
    }
  }    
}
